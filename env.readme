#
# Each running environment have to create it's own env.py
# This is the exemple of a env.py
#
import os
import sys


# set project home path
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
if BASE_DIR not in sys.path:
    sys.path.append(BASE_DIR)
os.environ["BASE_DIR"] = BASE_DIR

# settings for django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "{{ project_name }}.settings")

#
# This is a serious and important const variable.
# Do not change this or django settings will got error.
#
CONF_BASE_PATH = 'conf'
# path for project config
os.environ["CONF"] = _CONF = os.path.join(BASE_DIR, CONF_BASE_PATH)

# SECURITY WARNING: keep the secret key used in production secret!
os.environ["SECRET_KEY"] = '{{ secret_key }}'
# from django.utils.crypto import get_random_string
# os.environ["SECRET_KEY"] = get_random_string(50, os.environ["SECRET_KEY"])

# env for datetime time zone
os.environ.setdefault('TIME_ZONE', 'UTC')

# OPERATION_MODE:
#   note:
#     This will affect the dir of conf,
#     and conf/dev is ignore by git,
#     you can create your own dev config under conf/dev
os.environ.setdefault('OPERATION_MODE', 'dev')


# env for cb log
_LOG_DIR = os.path.join(BASE_DIR, 'logfiles')
os.environ.setdefault('LOG_CONFIG', os.path.join(_CONF, os.environ['OPERATION_MODE'], 'log.conf'))
os.environ.setdefault('LOG_DIR', _LOG_DIR)
os.environ.setdefault('COLLECTIVE_DIR', _LOG_DIR)
