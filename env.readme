#
# Each running environment have to create it's own env.py
# This is the exemple of a env.py
#
import os
import sys


# set project home path
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
if BASE_DIR not in sys.path:
    sys.path.append(BASE_DIR)
os.environ["BASE_DIR"] = BASE_DIR


# settings for django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "{{ project_name }}.settings")


#
# SECURITY WARNING: keep the secret key used in production secret!
#
#from django.utils.crypto import get_random_string
#os.environ["SECRET_KEY"] = get_random_string(50, os.environ["SECRET_KEY"])
os.environ["SECRET_KEY"] = "{{ secret_key }}"
os.environ["DATABASES_DEFAULT_PASSWORD"] = ""
#os.environ["WD_API_TOKEN"] = ""


#
# OPERATION_MODE:
#   note:
#     This will affect the dir of conf,
#     and conf/dev is ignore by git,
#     you can create your own dev config under conf/dev
#   On production mode, OPERATION_MODE should be also setup in gunicorn.service
#
OPERATION_MODE = 'dev'
os.environ.setdefault("OPERATION_MODE", OPERATION_MODE)


#
# This is a serious and important const variable.
# Do not change this or django settings will got error.
#
CONF_BASE_PATH = 'conf'
# path for project config
os.environ["CONF"] = _CONF = os.path.join(BASE_DIR, CONF_BASE_PATH)

# env for cb log
_LOG_DIR = os.path.join(BASE_DIR, 'logfiles')
os.environ.setdefault('LOG_CONFIG', os.path.join(_CONF, 'log.conf'))
os.environ.setdefault('LOG_DIR', _LOG_DIR)
os.environ.setdefault('COLLECTIVE_DIR', _LOG_DIR)

# datetime timezone of log
os.environ.setdefault('LOG_TZ', 'Asia/Taipei')

# datetime timezone of system
os.environ.setdefault('TZ', 'UTC')


#
# env for timedrive and filedrive
#
#os.environ.setdefault("FILEDRIVE_CONF", "filedrive.conf")
#os.environ.setdefault("TIMEDRIVE_CONF", "timedrive.conf")
#DATA_ROOT = os.path.join(BASE_DIR, "data")
#os.environ.setdefault("DATA_ROOT", DATA_ROOT)
#os.environ.setdefault("IMPORT", os.path.join(DATA_ROOT, "import"))
#os.environ.setdefault("ARCHIVE", os.path.join(DATA_ROOT, "archive"))
#os.environ.setdefault("DISPATCH", os.path.join(DATA_ROOT, "dispatch"))
